/**
 * –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */
const readline = require('readline');
const { isLeapYear, getDayOfWeek, calculateAge } = require('./dateUtils');
const { displayBirthdayDigital } = require('./displayUtils');

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

/**
  * @param {string} question
 * @param {number} min
 * @param {number} max
 * @returns {Promise<number>} 
 */
function askNumber(question, min, max) {
    return new Promise((resolve) => {
        const ask = () => {
            rl.question(question, (answer) => {
                const number = parseInt(answer);
                if (isNaN(number) || number < min || number > max) {
                    console.log(`–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç ${min} –¥–æ ${max}`);
                    ask();
                } else {
                    resolve(number);
                }
            });
        };
        ask();
    });
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */
async function main() {
    console.log('üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É –∞–Ω–∞–ª–∏–∑–∞ –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è! üéâ\n');

    try {
        // –ó–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const day = await askNumber('–í–≤–µ–¥–∏—Ç–µ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è (1-31): ', 1, 31);
        const month = await askNumber('–í–≤–µ–¥–∏—Ç–µ –º–µ—Å—è—Ü —Ä–æ–∂–¥–µ–Ω–∏—è (1-12): ', 1, 12);
        const year = await askNumber('–í–≤–µ–¥–∏—Ç–µ –≥–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è (1900-2023): ', 1900, 2023);

        console.log('\n' + '='.repeat(50));
        console.log(`üìÖ –ê–Ω–∞–ª–∏–∑ –≤–∞—à–µ–π –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è: ${day}.${month}.${year}`);
        console.log('='.repeat(50));

        // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–Ω—è –Ω–µ–¥–µ–ª–∏
        const dayOfWeek = getDayOfWeek(day, month, year);
        console.log(`üìÜ –î–µ–Ω—å –Ω–µ–¥–µ–ª–∏: ${dayOfWeek}`);

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏—Å–æ–∫–æ—Å–Ω–æ–≥–æ –≥–æ–¥–∞
        const leapYear = isLeapYear(year);
        console.log(`üìÖ ${year} –≥–æ–¥ –±—ã–ª ${leapYear ? '–≤–∏—Å–æ–∫–æ—Å–Ω—ã–º' : '–Ω–µ –≤–∏—Å–æ–∫–æ—Å–Ω—ã–º'}`);

        // –†–∞—Å—á–µ—Ç –≤–æ–∑—Ä–∞—Å—Ç–∞
        const age = calculateAge(day, month, year);
        console.log(`üéÇ –°–µ–π—á–∞—Å –≤–∞–º: ${age} `);

        // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∞—Ç—ã –≤ —Å—Ç–∏–ª–µ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–≥–æ —Ç–∞–±–ª–æ
        displayBirthdayDigital(day, month, year);

    } catch (error) {
        console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:', error);
    } finally {
        rl.close();
    }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if (require.main === module) {
    main();
}

module.exports = {
    askNumber,
    main
};